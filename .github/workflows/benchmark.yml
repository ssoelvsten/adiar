name: 'benchmark (pull request)'

on:
  pull_request:
    branches: [ main ]
    paths: [ 'src/adiar/**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  fetch-branch:
    name: 'Fetch branch'
    runs-on: ubuntu-latest

    steps:
    - id: identify
      run: echo "branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT

    outputs:
      branch: ${{ steps.identify.outputs.branch }}

  fetch-remote:
    name: 'Fetch remote'
    runs-on: ubuntu-latest

    steps:
      - id: identify
        run: echo "remote=${GITHUB_REPOSITORY}" >> $GITHUB_OUTPUT

    outputs:
      remote: ${{ steps.identify.outputs.remote }}

  run_picotrav:
    name: 'Performance Regression: Picotrav ${{ matrix.circuit }}'
    runs-on: ubuntu-latest

    needs: [fetch-branch, fetch-remote]

    strategy:
      fail-fast: false
      matrix:
        include:
          - { circuit: adder }
          - { circuit: arbiter }
          - { circuit: mem_ctrl }

    steps:
      - uses: actions/checkout@v5
        with:
          repository: 'ssoelvsten/bdd-benchmark'
          submodules: 'recursive'
          fetch-depth: '0'

      - name: 'apt install boost'
        run: |
          sudo apt update
          sudo apt install libboost-all-dev

      - name: 'apt install cargo (+ cbindgen)'
        run: |
          sudo apt update
          sudo apt install cargo
          cargo install --force cbindgen

      - name: 'pip install wget'
        run: |
          sudo pip install wget

      - name: 'python3 regression.py'
        run: |
          python3 ./regression.py <<< "picotrav
          yes
          ${{ matrix.circuit }}
          adiar
          8192
          origin
          main
          ${{ needs.fetch-remote.outputs.remote }}
          ${{ needs.fetch-branch.outputs.branch }}
          no
          no
          3
          10
          "

      - name: 'post regression_adiar.out'
        if: always()
        uses: mshick/add-pr-comment@main
        with:
          message-path: ./regression_adiar.out
          message-id: 'benchmark_picotrav_${{ matrix.circuit }}'

  run_qbf:
    name: 'Performance Regression: QBF ${{ matrix.category }}/${{ matrix.circuit }}'
    runs-on: ubuntu-latest

    needs: [fetch-branch, fetch-remote]

    strategy:
      fail-fast: false
      matrix:
        include:
          - { category: breakthrough,      circuit: 3x4_19_bwnib }
          - { category: breakthrough_dual, circuit: 3x6_10_bwnib }
          - { category: connect4,          circuit: 6x6_11_connect4_bwnib }
          - { category: domineering,       circuit: 5x5_13_bwnib }
          - { category: ep,                circuit: 8x8_7_e-8-1_p-3-4_bwnib }
          - { category: ep_dual,           circuit: 8x8_6_e-8-1_p-2-3_bwnib }
          - { category: hex,               circuit: hein_08_5x5-11_bwnib }
          - { category: httt,              circuit: 4x4_9_tippy_bwnib }

    steps:
      - uses: actions/checkout@v5
        with:
          repository: 'ssoelvsten/bdd-benchmark'
          submodules: 'recursive'
          fetch-depth: '0'

      - name: 'apt install boost'
        run: |
          sudo apt update
          sudo apt install libboost-all-dev

      - name: 'apt install cargo (+ cbindgen)'
        run: |
          sudo apt update
          sudo apt install cargo
          cargo install --force cbindgen

      - name: 'pip install wget'
        run: |
          sudo pip install wget

      - name: 'python3 regression.py'
        run: |
          python3 ./regression.py <<< "qbf
          yes
          ${{ matrix.category }}
          ${{ matrix.circuit }}
          adiar
          8192
          origin
          main
          ${{ needs.fetch-remote.outputs.remote }}
          ${{ needs.fetch-branch.outputs.branch }}
          no
          no
          3
          10
          "

      - name: 'post regression_adiar.out'
        if: always()
        uses: mshick/add-pr-comment@main
        with:
          message-path: ./regression_adiar.out
          message-id: 'benchmark_qbf_${{ matrix.circuit }}'

  run_queens:
    name: 'Performance Regression: ${{ matrix.N }}-Queens'
    runs-on: ubuntu-latest

    needs: [fetch-branch, fetch-remote]

    strategy:
      fail-fast: false
      matrix:
        include:
          - { N: 12 }
          - { N: 14 }

    steps:
      - uses: actions/checkout@v5
        with:
          repository: 'ssoelvsten/bdd-benchmark'
          submodules: 'recursive'
          fetch-depth: '0'

      - name: 'apt install boost'
        run: |
          sudo apt update
          sudo apt install libboost-all-dev

      - name: 'apt install cargo (+ cbindgen)'
        run: |
          sudo apt update
          sudo apt install cargo
          cargo install --force cbindgen

      - name: 'pip install wget'
        run: |
          sudo pip install wget

      - name: 'python3 regression.py'
        run: |
          python3 ./regression.py <<< "queens
          ${{ matrix.N }}
          adiar
          8192
          origin
          main
          ${{ needs.fetch-remote.outputs.remote }}
          ${{ needs.fetch-branch.outputs.branch }}
          no
          no
          3
          10
          "

      - name: 'post regression_adiar.out'
        if: always()
        uses: mshick/add-pr-comment@main
        with:
          message-path: ./regression_adiar.out
          message-id: 'benchmark_queens_${{ matrix.N }}'
