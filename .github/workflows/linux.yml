name: linux

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths: [ 'src/adiar/**', 'tests/**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build_test:
    name: 'Build + Test (Linux, ${{matrix.cc.cc}}-${{matrix.cc.v}})'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cc:
          # GNU Compiler
          - { cc: gcc,   v: 12, cxx: g++ }
          - { cc: gcc,   v: 13, cxx: g++ }
          - { cc: gcc,   v: 14, cxx: g++ }

          # Clang Compiler
          # - { cc: clang, v: 11, cxx: clang++ } # oldest possible
          - { cc: clang, v: 14, cxx: clang++ }
          - { cc: clang, v: 15, cxx: clang++ }
          - { cc: clang, v: 16, cxx: clang++ }
          - { cc: clang, v: 17, cxx: clang++ }

    env:
      cc: ${{matrix.cc.cc}}-${{matrix.cc.v}}
      cxx: ${{matrix.cc.cxx}}-${{matrix.cc.v}}

    steps:
    - name: Checkout commit
      uses: actions/checkout@v5
      with:
        submodules: 'recursive'

    - name: Install dependencies
      run: |
        sudo apt update

        echo "================================"
        echo "Compiler"
        sudo apt install build-essential
        sudo apt install ${{matrix.cc.cc}}-${{matrix.cc.v}}

        echo "================================"
        echo "Boost"
        sudo apt install libboost-all-dev

        echo "================================"
        echo "Graphviz"
        sudo apt install graphviz

    - name: Build tests
      working-directory: ${{runner.workspace}}
      run: |
        export CC=${{ env.cc }}
        export CXX=${{ env.cxx }}

        cmake -E make_directory ${{github.workspace}}/build
        cd ${{github.workspace}}/build
        cmake -D CMAKE_BUILD_TYPE=DEBUG -D ADIAR_STATS=ON ..
        cmake --build . --target adiar_test-all

    - name: Run tests
      working-directory: ${{github.workspace}}/build
      run: ./tests/adiar_test-all --reporter=info --colorizer=light
