name: 'MacOS'

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    paths: [ 'src/adiar/**', 'tests/**' ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build_test:
    name: 'Build + Test (${{matrix.cc.cc}}@${{matrix.cc.v || matrix.cc.xcode}})'
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest]
        cc:
          # GNU Compiler
        # - { cc: gcc,   v: 11, cxx: g++, xcode: latest } # oldest supported on Apple Silicon
        # - { cc: gcc,   v: 12, cxx: g++, xcode: latest }
        # - { cc: gcc,   v: 13, cxx: g++, xcode: latest }

          # Clang Compiler
          - { cc: clang, cxx: clang++, xcode: 15.0 }
          - { cc: clang, cxx: clang++, xcode: 15.4 }
          - { cc: clang, cxx: clang++, xcode: 16.1 }
          - { cc: clang, cxx: clang++, xcode: latest }

    steps:
    # Git repo set up
    - name: Checkout commit
      uses: actions/checkout@v5
      with:
        submodules: 'recursive'

    # Install dependencies
    - name: Set up Homebrew
      uses: Homebrew/actions/setup-homebrew@master
      with:
        cask: false # remove this if you need `brew install --cask`
        test-bot: false # remove this if you need `brew test-bot`

    - name: Install xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: ${{matrix.cc.xcode}}

    - name: Install dependencies
      run: |
        brew cleanup --prune-prefix

        if [ "${{matrix.cc.cc}}" = "gcc" ]; then
          echo "================================"
          echo GCC "Compiler"
          brew install ${{matrix.cc.cc}}@${{matrix.cc.v}}
        fi

        echo "================================"
        echo "Boost"
        brew install boost

        echo "================================"
        echo "Graphviz"
        brew install graphviz

    # CMake build and run
    - name: Build tests
      working-directory: ${{runner.workspace}}
      run: |
        if [ "${{ matrix.cc.cc }}" = "gcc" ]; then
          export CC=${{ matrix.cc.cc }}-${{ matrix.cc.v }}
          export CXX=${{ matrix.cc.cxx }}-${{ matrix.cc.v }}
        else
          export CC=${{ matrix.cc.cc }}
          export CXX=${{ matrix.cc.cxx }}
        fi

        cmake -E make_directory ${{github.workspace}}/build
        cd ${{github.workspace}}/build
        cmake -D CMAKE_BUILD_TYPE=DEBUG -D ADIAR_STATS=ON ..
        cmake --build . --target adiar_test-all

    - name: Run tests
      working-directory: ${{github.workspace}}/build
      run: ./tests/adiar_test-all --reporter=info --colorizer=light
